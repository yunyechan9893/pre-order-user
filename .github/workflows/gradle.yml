name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-docker-compose:
    runs-on: ubuntu-latest
    env:
      PRE_ORDER_DATABASE_URL: ${{ secrets.PRE_ORDER_DATABASE_URL }}
      PRE_ORDER_DATABASE_USERNAME: ${{ secrets.PRE_ORDER_DATABASE_USERNAME }}
      PRE_ORDER_DATABASE_PASSWORD: ${{ secrets.PRE_ORDER_DATABASE_PASSWORD }}
      PRE_ORDER_NAVER_ID: ${{ secrets.PRE_ORDER_NAVER_ID }}
      PRE_ORDER_NAVER_PASSWORD: ${{ secrets.PRE_ORDER_NAVER_PASSWORD }}
      ENCRYPTION_SECRET_KEY: ${{ secrets.ENCRYPTION_SECRET_KEY }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean bootJar

      - name: Copy JAR to Docker context
        run: cp build/libs/UserSever-0.0.1-SNAPSHOT.jar docker/server/

      - name: Build and start services with Docker Compose
        run: docker-compose -f ./docker-compose.yml up --build -d

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t  .

      - name: Push Docker images to Docker Hub
        run: |
          docker tag server:latest ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ secrets.DOCKER_IMAGE_TAG }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ secrets.DOCKER_IMAGE_TAG }}
#
#      - name: Transfer JAR to EC2 server
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          port: ${{ secrets.EC2_PORT }}
#          source: "docker/server/UserSever-0.0.1-SNAPSHOT.jar"
#          target: "/home/${{ secrets.EC2_USERNAME }}/app/"
#
#      - name: Install Docker and Docker Compose on EC2 server
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          port: ${{ secrets.EC2_PORT }}
#          script: |
#            sudo apt-get update
#            sudo apt-get install -y docker.io
#            sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#            sudo chmod +x /usr/local/bin/docker-compose
#            sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
#            sudo service docker start
#
#      - name: Deploy Docker Compose on EC2 server
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          port: ${{ secrets.EC2_PORT }}
#          script: |
#            cd /home/${{ secrets.EC2_USERNAME }}/app/
#            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
#            docker-compose down
#            docker-compose pull
#            docker-compose up -d
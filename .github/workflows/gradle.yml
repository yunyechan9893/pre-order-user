name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-docker-compose:
    runs-on: ubuntu-latest
    env:
      PRE_ORDER_DATABASE_URL: ${{ secrets.PRE_ORDER_DATABASE_URL }}
      PRE_ORDER_DATABASE_USERNAME: ${{ secrets.PRE_ORDER_DATABASE_USERNAME }}
      PRE_ORDER_DATABASE_PASSWORD: ${{ secrets.PRE_ORDER_DATABASE_PASSWORD }}
      PRE_ORDER_REDIS_HOST: ${{ secrets.PRE_ORDER_REDIS_HOST }}
      PRE_ORDER_NAVER_ID: ${{ secrets.PRE_ORDER_NAVER_ID }}
      PRE_ORDER_NAVER_PASSWORD: ${{ secrets.PRE_ORDER_NAVER_PASSWORD }}
      ENCRYPTION_SECRET_KEY: ${{ secrets.ENCRYPTION_SECRET_KEY }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build bootJar

      - name: Copy JAR to Docker context
        run: cp build/libs/UserSever-0.0.1-SNAPSHOT.jar docker/server/UserSever-0.0.1-SNAPSHOT.jar

      - name: Build and start services with Docker Compose
        run: docker-compose -f ./docker-compose-dev.yml up --build -d

      - name: Transfer JAR to EC2 server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PRE_ORDER_USER_EC2_HOST }}
          username: ${{ secrets.PRE_ORDER_USER_EC2_USERNAME }}
          key: ${{ secrets.PRE_ORDER_USER_EC2_SSH_KEY }}
          port: ${{ secrets.PRE_ORDER_USER_EC2_PORT }}
          source: "docker/server/UserSever-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/"

      - name: Save environment variables to file
        run: |
          echo "PRE_ORDER_DATABASE_URL=${{ secrets.PRE_ORDER_DATABASE_URL }}" > envfile.env
          echo "PRE_ORDER_DATABASE_USERNAME=${{ secrets.PRE_ORDER_DATABASE_USERNAME }}" >> envfile.env
          echo "PRE_ORDER_DATABASE_PASSWORD=${{ secrets.PRE_ORDER_DATABASE_PASSWORD }}" >> envfile.env
          echo "PRE_ORDER_REDIS_HOST=${{ secrets.PRE_ORDER_REDIS_HOST }}" >> envfile.env
          echo "PRE_ORDER_NAVER_ID=${{ secrets.PRE_ORDER_NAVER_ID }}" >> envfile.env
          echo "PRE_ORDER_NAVER_PASSWORD=${{ secrets.PRE_ORDER_NAVER_PASSWORD }}" >> envfile.env
          echo "ENCRYPTION_SECRET_KEY=${{ secrets.ENCRYPTION_SECRET_KEY }}" >> envfile.env
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> envfile.env
          echo "DOCKERHUB_PASSWORD=${{ secrets.DOCKER_PASSWORD }}" >> envfile.env

      - name: Transfer envfile to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PRE_ORDER_USER_EC2_HOST }}
          username: ${{ secrets.PRE_ORDER_USER_EC2_USERNAME }}
          key: ${{ secrets.PRE_ORDER_USER_EC2_SSH_KEY }}
          port: ${{ secrets.PRE_ORDER_USER_EC2_PORT }}
          source: "envfile.env"
          target: "/home/ubuntu/"

      - name: Run commands on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRE_ORDER_USER_EC2_HOST }}
          username: ${{ secrets.PRE_ORDER_USER_EC2_USERNAME }}
          key: ${{ secrets.PRE_ORDER_USER_EC2_SSH_KEY }}
          script: |
            # Load the environment variables from envfile
            export $(cat /home/ubuntu/envfile.env | xargs)
            # Run your deployment commands here
            echo "Environment variables set on EC2"
            # Example deployment command
            sudo docker-compose --env-file envfile.env up --build -d